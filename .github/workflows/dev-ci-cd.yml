on:
  workflow_dispatch:
    types: [created]
  push:
    branches:
      - main

jobs:
  deploy-dev:
    name: Build image and push to Amazon ECR (Dev)
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"

      - name: Build image
        run: |
          docker build --build-arg BACKEND_URL=$BACKEND_URL --build-arg AUTH_URL=$AUTH_URL --build-arg BUILD_FEATURE="" -t dena-attester_peregrine:latest .
        env:
          BACKEND_URL: ${{ vars.BACKEND_URL }}
          AUTH_URL: ${{ vars.AUTH_URL }}

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dena/attester_peregrine
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag dena-attester_peregrine $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag dena-attester_peregrine $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy-prod:
    name: Build image and push to Amazon ECR (Prod)
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"

      - name: Build image
        run: |
          docker build --build-arg BACKEND_URL=$BACKEND_URL --build-arg AUTH_URL=$AUTH_URL -t dena-attester_spiritnet:latest .
        env:
          BACKEND_URL: ${{ vars.BACKEND_URL }}
          AUTH_URL: ${{ vars.AUTH_URL }}

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dena/attester_spiritnet
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag dena-attester_spiritnet $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag dena-attester_spiritnet $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
